/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:16 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class APMASLLogger, APMMonitoringSampledData, NSObject, APMUserDefaults, NSString;

@interface APMMonitor : NSObject {

	int _logLevel;
	APMASLLogger* _logger;
	APMMonitoringSampledData* _monitoringSampledData;
	NSObject*<OS_dispatch_queue> _monitorQueue;
	long long _libraryVersion;
	APMUserDefaults* _monitorUserDefaults;
	char _debugModeEnabled;
	char _encodeContexts;
	NSString* _logTag;

}

@property (assign,getter=isDebugModeEnabled,nonatomic) char debugModeEnabled;              //@synthesize debugModeEnabled=_debugModeEnabled - In the implementation block
@property (assign,nonatomic) char encodeContexts;                                          //@synthesize encodeContexts=_encodeContexts - In the implementation block
@property (nonatomic,retain) NSString * logTag;                                            //@synthesize logTag=_logTag - In the implementation block
+(char)isMonitorableLevel:(int)arg1 ;
+(id)stringWithLogMessage:(id)arg1 logLevel:(int)arg2 contexts:(id)arg3 encodeContexts:(char)arg4 ;
+(id)encodedStringWithContextArray:(id)arg1 insertSpaces:(char)arg2 ;
+(id)encodedStringWithContextObject:(id)arg1 ;
+(id)lastAPMSymbolFromException:(id)arg1 ;
+(char)isSilentLevel:(int)arg1 ;
+(id)monitoringDataKeyWithMessage:(id)arg1 logLevel:(int)arg2 libraryVersion:(long long)arg3 ;
+(id)logLevelDescriptionFromLogLevel:(int)arg1 ;
-(void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 ;
-(void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 ;
-(void)setLogTag:(NSString *)arg1 ;
-(void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 ;
-(void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6 ;
-(void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 contexts:(id)arg4 ;
-(id)initWithLibraryVersion:(long long)arg1 ;
-(void)setEncodeContexts:(char)arg1 ;
-(void)clearMonitoringData;
-(id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2 ;
-(id)initWithLogLevel:(int)arg1 logger:(id)arg2 libraryVersion:(long long)arg3 ;
-(void)migrateMonitorDataOnMonitorQueue;
-(void)loadMonitoringDataFromUserDefaultsOnMonitorQueue;
-(char)isLoggableLevel:(int)arg1 ;
-(void)logToConsole:(int)arg1 message:(id)arg2 logLevel:(int)arg3 ;
-(void)insertOrUpdateMonitoringDataWithMessage:(id)arg1 encodedContext:(id)arg2 logLevel:(int)arg3 ;
-(void)saveMonitoringDataToUserDefaultsOnMonitorQueue;
-(NSString *)logTag;
-(void)synchronizeToDiskOnMonitorQueue;
-(char)encodeContexts;
-(void)setLogLevel:(int)arg1 ;
-(char)isDebugModeEnabled;
-(void)setDebugModeEnabled:(char)arg1 ;
@end

