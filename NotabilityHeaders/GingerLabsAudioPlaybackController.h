/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:11 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/GingerLabsAudioPlaybackSeekingDelegate.h>
#import <Notability/GingerLabsAudioNotificationSenderObserver.h>

@class GingerLabsAudioPlayback, GingerLabsRecordingInfo, NSMutableArray, NSDate, GingerLabsRecordingsLibrary, AudioProcessor, NSString;

@interface GingerLabsAudioPlaybackController : NSObject <GingerLabsAudioPlaybackSeekingDelegate, GingerLabsAudioNotificationSenderObserver> {

	GingerLabsAudioPlayback* playbackInstance;
	GingerLabsRecordingInfo* recordingInfo;
	int idToLoadAfterAlert;
	char shouldPlayWhenLoadedAfterAlert;
	NSMutableArray* playbackInstances;
	int currentRecordingIndex;
	char hasInitializedRecordings;
	char isSeeking;
	NSDate* playbackStartTimeForAnalytics;
	NSDate* playbackSpeedStartTimeForAnalytics;
	float playbackSpeedForAnalytics;
	char _isPlaying;
	char _isPaused;
	GingerLabsRecordingsLibrary* _recordingLibrary;
	float _playbackSpeed;
	float _outputVolume;
	AudioProcessor* _audioProcessor;

}

@property (nonatomic,retain) AudioProcessor * audioProcessor;                                    //@synthesize audioProcessor=_audioProcessor - In the implementation block
@property (assign,nonatomic) char isPlaying;                                                     //@synthesize isPlaying=_isPlaying - In the implementation block
@property (assign,nonatomic) char isPaused;                                                      //@synthesize isPaused=_isPaused - In the implementation block
@property (assign,nonatomic) float outputVolume;                                                 //@synthesize outputVolume=_outputVolume - In the implementation block
@property (assign,nonatomic,__weak) GingerLabsRecordingsLibrary * recordingLibrary;              //@synthesize recordingLibrary=_recordingLibrary - In the implementation block
@property (nonatomic,readonly) GingerLabsAudioPlayback * playbackInstance; 
@property (nonatomic,readonly) GingerLabsRecordingInfo * recordingInfo; 
@property (nonatomic,readonly) int currentRecordingIndex; 
@property (assign,nonatomic) float playbackSpeed;                                                //@synthesize playbackSpeed=_playbackSpeed - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(GingerLabsRecordingsLibrary *)recordingLibrary;
-(void)setRecordingLibrary:(GingerLabsRecordingsLibrary *)arg1 ;
-(id)refreshCurrentRecordings;
-(AudioProcessor *)audioProcessor;
-(double)cumulativeDuration;
-(void)togglePlay;
-(void)beginSeeking;
-(double)cumulativePlaybackTime;
-(void)seekToNextRecording;
-(void)seekToPreviousRecording;
-(void)prepForPlayback;
-(void)loadRecordingAtIndex:(int)arg1 ;
-(void)seekToCumulativeTime:(double)arg1 sendNotification:(char)arg2 ;
-(GingerLabsAudioPlayback *)playbackInstance;
-(void)loadRecordingWithIdentifier:(int)arg1 ;
-(void)unloadRecording;
-(int)idOfCurrentPlaybackInstance;
-(double)playbackTimeOfCurrentPlaybackInstance;
-(double)recordingTimeToCumulativeTime:(double)arg1 forRecordingID:(int)arg2 ;
-(void)audioSystemRestarted;
-(int)currentRecordingIndex;
-(void)setPlaybackInstance:(GingerLabsAudioPlayback *)arg1 ;
-(void)analyticsForPlaybackDidPause;
-(void)analyticsForSetPlaybackSpeed:(float)arg1 ;
-(char)audioPlaybackRequestsIsUserSeekingAudio;
-(void)setAudioProcessor:(AudioProcessor *)arg1 ;
-(void)handleNotification:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)stop;
-(char)isPlaying;
-(void)close;
-(void)play;
-(void)pause;
-(char)isPaused;
-(void)setIsPlaying:(char)arg1 ;
-(GingerLabsRecordingInfo *)recordingInfo;
-(void)endSeeking;
-(float)playbackSpeed;
-(void)setPlaybackSpeed:(float)arg1 ;
-(void)setIsPaused:(char)arg1 ;
-(void)setOutputVolume:(float)arg1 ;
-(float)outputVolume;
@end

