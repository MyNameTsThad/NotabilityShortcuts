/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:10 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>

@protocol OS_dispatch_queue;
@class GLGoogleDriveModel, GTLRDriveService, NSString, NSObject, NSArray, NSURLSession, GTLRDrive_About;

@interface GLGoogleDriveBridgeImpl : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate> {

	char _hadRateLimitError;
	GLGoogleDriveModel* _model;
	GTLRDriveService* _service;
	NSString* _queueLabel;
	NSObject*<OS_dispatch_queue> _queue;
	NSArray* _tasks;
	int _maxConcurrentTasks;
	NSURLSession* _session;
	/*^block*/id _checkAuthorizedBlock;
	GTLRDrive_About* _aboutDrive;

}

@property (retain) GTLRDriveService * service;                      //@synthesize service=_service - In the implementation block
@property (retain) GLGoogleDriveModel * model;                      //@synthesize model=_model - In the implementation block
@property (assign) char hadRateLimitError;                          //@synthesize hadRateLimitError=_hadRateLimitError - In the implementation block
@property (retain) NSString * queueLabel;                           //@synthesize queueLabel=_queueLabel - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> queue;              //@synthesize queue=_queue - In the implementation block
@property (retain) NSArray * tasks;                                 //@synthesize tasks=_tasks - In the implementation block
@property (readonly) NSArray * executingTasks; 
@property (readonly) NSArray * idleTasks; 
@property (assign) int maxConcurrentTasks;                          //@synthesize maxConcurrentTasks=_maxConcurrentTasks - In the implementation block
@property (retain) NSURLSession * session;                          //@synthesize session=_session - In the implementation block
@property (copy) id checkAuthorizedBlock;                           //@synthesize checkAuthorizedBlock=_checkAuthorizedBlock - In the implementation block
@property (retain) GTLRDrive_About * aboutDrive;                    //@synthesize aboutDrive=_aboutDrive - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)hadRateLimitError;
-(id)aboutGet:(/*^block*/id)arg1 ;
-(id)filesGetMetaDataAsync:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)filesListAsync:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)downloadFileAsync:(id)arg1 convertToPDF:(char)arg2 progress:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(id)moveFileAtPathAsync:(id)arg1 toPath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)createDirectoryAtPathAsync:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)updateOrCreateFileAtPathAsync:(id)arg1 uploadPath:(id)arg2 progress:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(id)filesUpdateMetaDataAsync:(id)arg1 metadata:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)deletePathAsync:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setMaxConcurrentTasks:(int)arg1 ;
-(void)setQueueLabel:(NSString *)arg1 ;
-(NSString *)queueLabel;
-(void)modelCleared:(id)arg1 ;
-(id)tempRootDirectory;
-(id)taskForURLSessionTask:(id)arg1 ;
-(id)fileNotFoundError:(id)arg1 ;
-(void)finishTask:(id)arg1 result:(id)arg2 error:(id)arg3 ;
-(id)newTask:(/*^block*/id)arg1 concurrency:(int)arg2 ;
-(void)task:(id)arg1 completed:(/*^block*/id)arg2 result:(id)arg3 error:(id)arg4 ;
-(void)task:(id)arg1 aboutCompletion:(/*^block*/id)arg2 ;
-(id)dispatchTaskAsync:(id)arg1 ;
-(void)task:(id)arg1 filesGetMetaData:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 filesList:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 downloadFile:(id)arg2 convertToPDF:(char)arg3 progress:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(void)task:(id)arg1 moveFileAtPath:(id)arg2 toPath:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)task:(id)arg1 createDirectoryAtPath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 updateOrCreateFileAtPath:(id)arg2 uploadPath:(id)arg3 repaired:(char)arg4 imported:(char)arg5 progress:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)task:(id)arg1 filesUpdateMetaData:(id)arg2 metadata:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)task:(id)arg1 deletePath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)executeTask:(id)arg1 ;
-(id)checkAuthorizedBlock;
-(NSArray *)executingTasks;
-(void)setCheckAuthorizedBlock:(id)arg1 ;
-(id)authError;
-(NSArray *)idleTasks;
-(int)maxConcurrentTasks;
-(void)doExecuteTask:(id)arg1 ;
-(void)ensureAuthorized;
-(void)setHadRateLimitError:(char)arg1 ;
-(void)task:(id)arg1 updateModel:(/*^block*/id)arg2 doneBlock:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 completed:(/*^block*/id)arg2 result:(id)arg3 error:(id)arg4 updateModelBlock:(/*^block*/id)arg5 ;
-(char)checkSuccess:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)newTempFilePath;
-(void)task:(id)arg1 fetchQuery:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 filesListWithQuery:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)invalidArgumentsError:(id)arg1 ;
-(GTLRDrive_About *)aboutDrive;
-(void)setAboutDrive:(GTLRDrive_About *)arg1 ;
-(id)unsupportedPDFConversion;
-(void)task:(id)arg1 fetchDownload:(id)arg2 fileSize:(long)arg3 progress:(/*^block*/id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)task:(id)arg1 importPath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 importOrCreateDirectoryAtPath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 untrashPath:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)task:(id)arg1 filesListWithQuery:(id)arg2 storeInParent:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)task:(id)arg1 importPath:(id)arg2 filename:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)init;
-(void)dealloc;
-(GLGoogleDriveModel *)model;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)setSession:(NSURLSession *)arg1 ;
-(NSURLSession *)session;
-(void)setModel:(GLGoogleDriveModel *)arg1 ;
-(void)cancelAll;
-(void)assertQueue;
-(void)setService:(GTLRDriveService *)arg1 ;
-(GTLRDriveService *)service;
-(NSArray *)tasks;
-(void)setTasks:(NSArray *)arg1 ;
@end

