/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:12 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>

@protocol GLPopoverControllerDelegate;
@class UIViewController, NSArray, UIColor, NSString;

@interface GLPopoverController : NSObject <UIPopoverControllerDelegate, UIPopoverPresentationControllerDelegate> {

	char _allowsFullscreenAdaptivePresentation;
	id<GLPopoverControllerDelegate> _delegate;
	UIViewController* _contentViewController;
	NSArray* _passthroughViews;

}

@property (nonatomic,retain) UIViewController * contentViewController;                     //@synthesize contentViewController=_contentViewController - In the implementation block
@property (assign,nonatomic) char allowsFullscreenAdaptivePresentation;                    //@synthesize allowsFullscreenAdaptivePresentation=_allowsFullscreenAdaptivePresentation - In the implementation block
@property (assign,nonatomic,__weak) id<GLPopoverControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) CGSize popoverContentSize; 
@property (getter=isPopoverVisible,nonatomic,readonly) char popoverVisible; 
@property (nonatomic,copy) NSArray * passthroughViews;                                     //@synthesize passthroughViews=_passthroughViews - In the implementation block
@property (nonatomic,copy) UIColor * backgroundColor; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)presentPopoverFromView:(id)arg1 permittedArrowDirections:(unsigned)arg2 animated:(char)arg3 ;
-(void)setAllowsFullscreenAdaptivePresentation:(char)arg1 ;
-(void)dismissPopoverAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(char)allowsFullscreenAdaptivePresentation;
-(void)setBackgroundColor:(UIColor *)arg1 ;
-(UIColor *)backgroundColor;
-(void)setDelegate:(id<GLPopoverControllerDelegate>)arg1 ;
-(id<GLPopoverControllerDelegate>)delegate;
-(void)setContentViewController:(UIViewController *)arg1 ;
-(int)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2 ;
-(int)adaptivePresentationStyle;
-(UIViewController *)contentViewController;
-(void)dismissPopoverAnimated:(char)arg1 ;
-(char)isPopoverVisible;
-(id)initWithContentViewController:(id)arg1 ;
-(void)presentPopoverFromRect:(CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned)arg3 animated:(char)arg4 ;
-(void)presentPopoverFromBarButtonItem:(id)arg1 permittedArrowDirections:(unsigned)arg2 animated:(char)arg3 ;
-(void)popoverPresentationControllerDidDismissPopover:(id)arg1 ;
-(NSArray *)passthroughViews;
-(void)setPassthroughViews:(NSArray *)arg1 ;
-(char)popoverPresentationControllerShouldDismissPopover:(id)arg1 ;
-(void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout CGRect*)arg2 inView:(inout id*)arg3 ;
-(CGSize)popoverContentSize;
-(void)setPopoverContentSize:(CGSize)arg1 ;
@end

