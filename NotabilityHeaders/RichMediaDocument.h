/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:09 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <Notability/SnapProvider.h>
#import <Notability/ThumbnailCacheDataSource.h>

@protocol NBCPInterface;
@class FormattedString, GLOrderedCache, GenericMediaObject, GLRecursiveReadWriteLock, NSSet, NBMyScript, NSArray;

@interface RichMediaDocument : NSObject <SnapProvider, ThumbnailCacheDataSource> {

	FormattedString* textStore;
	int paperLineStyle;
	int paperIndex;
	GLOrderedCache* _pages;
	GLOrderedCache* _lines;
	GenericMediaObject* containingObject;
	int zoomRectLineIndex;
	int zoomRectLineComponent;
	float zoomViewSnapMargin;
	char isPartialLayoutEnabled;
	GLRecursiveReadWriteLock* readwriteLock;
	char _searchHighlightsHidden;
	id<NBCPInterface> _contentPlaybackInterface;
	int _numberOfExtraLayoutPages;
	NSSet* _searchResults;
	NBMyScript* _myScript;

}

@property (nonatomic,retain) GenericMediaObject * containingObject; 
@property (nonatomic,retain) NBMyScript * myScript;                                          //@synthesize myScript=_myScript - In the implementation block
@property (nonatomic,retain) FormattedString * textStore; 
@property (assign,nonatomic) int paperLineStyle; 
@property (assign,nonatomic) int paperIndex; 
@property (assign,nonatomic) char isPartialLayoutEnabled; 
@property (assign,nonatomic,__weak) id<NBCPInterface> contentPlaybackInterface;              //@synthesize contentPlaybackInterface=_contentPlaybackInterface - In the implementation block
@property (assign,nonatomic) int numberOfExtraLayoutPages;                                   //@synthesize numberOfExtraLayoutPages=_numberOfExtraLayoutPages - In the implementation block
@property (nonatomic,readonly) NSArray * pages; 
@property (nonatomic,readonly) NSArray * lines; 
@property (nonatomic,retain) NSSet * searchResults;                                          //@synthesize searchResults=_searchResults - In the implementation block
@property (assign,nonatomic) char searchHighlightsHidden;                                    //@synthesize searchHighlightsHidden=_searchHighlightsHidden - In the implementation block
+(char)validatePageContentDictionary:(id)arg1 ;
-(FormattedString *)textStore;
-(CGRect)documentRect;
-(CGRect)convertDocumentContentRectToDocumentRect:(CGRect)arg1 ;
-(int)paperIndex;
-(CGPoint)convertDocumentContentPointToDocumentPoint:(CGPoint)arg1 ;
-(NSRange)pageRangeIntersectingDocumentRect:(CGRect)arg1 ;
-(CGRect)convertDocumentRectToDocumentContentRect:(CGRect)arg1 ;
-(void)lockReadLock;
-(void)unlockReadWriteLock;
-(id)snapPrimitivesForDocumentContentCoordinate:(CGPoint)arg1 ;
-(id)snapForPoints:(id)arg1 withPrimitives:(id)arg2 pointSnapThreshold:(float)arg3 lineSnapThreshold:(float)arg4 snappedPointValuePointer:(id*)arg5 ;
-(id)snapForPoint:(CGPoint)arg1 withPrimitives:(id)arg2 includeAngleGuides:(char)arg3 includeHandwriting:(char)arg4 pointSnapThreshold:(float)arg5 lineSnapThreshold:(float)arg6 ;
-(int)paperLineStyle;
-(void)setPaperIndex:(int)arg1 ;
-(void)setPaperLineStyle:(int)arg1 ;
-(CGRect)documentCoordRectFromTextRange:(NSRange)arg1 ;
-(CGRect)listDecorationDocumentHitRectForTextLocation:(int)arg1 ;
-(int)lineDataIndexForTextLocation:(int)arg1 ;
-(id)lineDataForLineIndex:(int)arg1 ;
-(int)textPositionFromLineAtIndex:(int)arg1 upDirection:(char)arg2 closestToX:(float)arg3 ;
-(id)documentCoordRectsFromTextRange:(NSRange)arg1 ;
-(id)getPageAtIndex:(int)arg1 ;
-(id)getLineAtIndex:(int)arg1 ;
-(void)lockWriteLock;
-(id)attributedStringForLayout;
-(int)indexOfLine:(id)arg1 ;
-(void)markContentUnusedBeyondPageIndex:(int)arg1 ;
-(void)clearUnusedPages;
-(void)setNumberOfExtraLayoutPages:(int)arg1 ;
-(char)containsPDFFiles;
-(id)thumbnailForPageWithIndex:(int)arg1 size:(CGSize)arg2 scale:(float)arg3 renderFlags:(unsigned)arg4 ;
-(char)isPDFLinkValid:(id)arg1 pdfFile:(id)arg2 ;
-(id)pdfTextUnderCharacterLimit:(int)arg1 ;
-(NSRange)textRangeFromDocumentCoordRect:(CGRect)arg1 ;
-(id)documentCoordRectsFromTextRange:(NSRange)arg1 includeIndentDecoration:(char)arg2 ;
-(char)searchHighlightsHidden;
-(void)setSearchHighlightsHidden:(char)arg1 ;
-(id)documentRectsForUpdatedRichMediaPDFPageHighlights;
-(id)pageContainingDocumentContentPoint:(CGPoint)arg1 ;
-(id)pdfPageNumbersForRelatedNotePageIndexes:(id)arg1 ;
-(CGRect)documentCoordRectFromTextRange:(NSRange)arg1 withOriginAtBaseline:(char)arg2 ;
-(id)documentCoordRectsFromTextRange:(NSRange)arg1 withOriginAtBaseline:(char)arg2 includeIndentDecoration:(char)arg3 ;
-(id)documentCoordRectsFromCaret:(id)arg1 ;
-(id)pdfPageForPDFPageNumber:(unsigned)arg1 pdfFile:(id)arg2 ;
-(id)pageContainingLine:(id)arg1 ;
-(id)lineDataForTextLocation:(int)arg1 ;
-(id)pageContainingDocumentPoint:(CGPoint)arg1 ;
-(id)lineDataForLineIndex:(int)arg1 closestToX:(float)arg2 ;
-(unsigned)mapDocumentPointToCharacterIndex:(CGPoint)arg1 isBelowContent:(char*)arg2 shouldClampToDocumentBounds:(char)arg3 ;
-(CGRect)manuallyMoveZoomRectFrom:(CGRect)arg1 to:(CGRect)arg2 snapToMedia:(char)arg3 snapToHorizontalLines:(char)arg4 snapToVerticalLines:(char)arg5 ;
-(CGRect)clampRectToDocumentBounds:(CGRect)arg1 ;
-(void)clampRect:(CGRect*)arg1 toPageBounds:(CGRect)arg2 pageIndex:(int)arg3 ;
-(CGRect)snapPageContentRect:(CGRect)arg1 insideObject:(id)arg2 inPage:(id)arg3 ;
-(void)setContainingObject:(GenericMediaObject *)arg1 ;
-(GenericMediaObject *)containingObject;
-(id)pageContainingZoomRect:(CGRect)arg1 ;
-(int)isRect:(CGRect)arg1 atEdgeOfRect:(CGRect)arg2 ;
-(CGRect)zoomRectForReturn:(CGRect)arg1 isReverseReturn:(char)arg2 ;
-(CGRect)advanceRectNotSnappedFrom:(CGRect)arg1 to:(CGRect)arg2 ;
-(CGRect)clampDocContentRect:(CGRect)arg1 intoMediaObject:(id)arg2 shouldExtendCanvas:(char)arg3 ;
-(id)mapDocumentPointToValue:(CGPoint)arg1 isBelowContent:(char*)arg2 shouldClampToDocumentBounds:(char)arg3 valueAsRange:(char)arg4 ;
-(NSRange)lineCharacterRangeForYOffset:(float)arg1 ;
-(int)numLinesNeededWithHeight:(float)arg1 toFillSpaceWithStartY:(float)arg2 height:(float)arg3 ;
-(char)lastCharacterOfStringIsNewline:(id)arg1 ;
-(CGRect)documentContentRectFromTextRange:(NSRange)arg1 ;
-(int)insertBlankSpace:(float)arg1 atYCoord:(float)arg2 withFont:(CTFontRef)arg3 beginningOfLine:(char)arg4 ;
-(void)undoMove:(CGPoint)arg1 forMediaObject:(id)arg2 ;
-(/*^block*/id)addPage:(id)arg1 atIndex:(int)arg2 involvesMultiplePages:(char)arg3 noteController:(id)arg4 trimBlankPageContentAtEnd:(char)arg5 ;
-(void)setIsPartialLayoutEnabled:(char)arg1 ;
-(void)shiftHandwritingContentBelow:(float)arg1 byAmount:(float)arg2 ;
-(void)insertBlankSpaceAtEndOfDocumentForNewText:(id)arg1 atYOrigin:(float)arg2 ;
-(id)pageContentDictionaryForIndex:(int)arg1 delete:(char)arg2 serialize:(char)arg3 involvesMultiplePages:(char)arg4 noteController:(id)arg5 ;
-(CGSize)thumbnailSizeForPage:(id)arg1 desiredSize:(CGSize)arg2 clampedByHeight:(char)arg3 ;
-(CGSize)thumbnailSizeForPage:(id)arg1 desiredSize:(CGSize)arg2 ;
-(CGSize)thumbnailSizeForPageClampedByHeight:(id)arg1 desiredSize:(CGSize)arg2 ;
-(id)filterPageArray:(id)arg1 withBlockFilter:(/*^block*/id)arg2 ;
-(int)pageNumberForResult:(id)arg1 ;
-(id)thumbnailCache:(id)arg1 thumbnailForPageWithIndex:(int)arg2 size:(CGSize)arg3 scale:(float)arg4 renderFlags:(unsigned)arg5 ;
-(void)setTextStore:(FormattedString *)arg1 ;
-(int)indexOfPage:(id)arg1 ;
-(void)markAllPagesUnused;
-(void)markAllLinesUnused;
-(void)clearUnusedLines;
-(void)clearAllPagesAndLines;
-(int)pageIndexAtYOffset:(float)arg1 ;
-(float)yOffsetOfPageAtIndex:(int)arg1 ;
-(id)documentContentCoordRectsFromTextRange:(NSRange)arg1 ;
-(char)documentContentPointIsOnLeftGutter:(CGPoint)arg1 ;
-(CGRect)documentCoordRectFromCaret:(id)arg1 ;
-(CGRect)caretRectForTextLocation:(unsigned)arg1 ;
-(CGSize)sizeForZoomRect:(CGRect)arg1 ;
-(CGRect)manuallyMoveZoomRectFrom:(CGRect)arg1 to:(CGRect)arg2 ;
-(CGRect)zoomRect:(CGRect)arg1 advanceByAmount:(float)arg2 ;
-(CGPoint)convertDocumentPointToDocumentContentPoint:(CGPoint)arg1 ;
-(NSRange)mapDocumentPointToCharacterRange:(CGPoint)arg1 isBelowContent:(char*)arg2 shouldClampToDocumentBounds:(char)arg3 ;
-(char)isDocumentContentPointInPDFPage:(CGPoint)arg1 ;
-(char)isDocumentContentPointInPDFTextAndNotRegularText:(CGPoint)arg1 includeBuffer:(char)arg2 pdfPage:(id*)arg3 ;
-(id)pageContainingTextLocation:(int)arg1 extendRangeForEditing:(char)arg2 ;
-(id)pagesIntersectingDocumentRect:(CGRect)arg1 ;
-(void)addBlankPageWithSize:(CGSize)arg1 atIndex:(int)arg2 noteController:(id)arg3 ;
-(id)deletePageAtIndex:(int)arg1 involvesMultiplePages:(char)arg2 noteController:(id)arg3 ;
-(void)clearPageAtIndex:(int)arg1 noteController:(id)arg2 ;
-(id)serializablePageContentDictionaryForIndex:(int)arg1 involvesMultiplePages:(char)arg2 noteController:(id)arg3 ;
-(CGSize)thumbnailSizeForPageWithIndex:(int)arg1 desiredSize:(CGSize)arg2 ;
-(CGSize)thumbnailSizeForPageWithIndex:(int)arg1 clampingSize:(CGSize)arg2 ;
-(id)pagesWithPageNumbers:(id)arg1 ;
-(id)annotatedPages;
-(id)bookmarkedPages;
-(CGRect)documentCoordRectForResult:(id)arg1 ;
-(id)searchedPages;
-(void)connectTextBlocksToControllersForExport;
-(char)isPartialLayoutEnabled;
-(id<NBCPInterface>)contentPlaybackInterface;
-(void)setContentPlaybackInterface:(id<NBCPInterface>)arg1 ;
-(int)numberOfExtraLayoutPages;
-(NBMyScript *)myScript;
-(void)setMyScript:(NBMyScript *)arg1 ;
-(float)lineHeightFor:(int)arg1 ;
-(void)_addPaperLines:(id)arg1 documentContentConversion:(/*^block*/id)arg2 horizontal:(char)arg3 snapPrimitives:(id)arg4 lines:(id)arg5 ;
-(id)filterPrimitivesToPoints:(id)arg1 includeHandwriting:(char)arg2 includeAngleGuides:(char)arg3 ;
-(id)filterPrimitivesToLineSegments:(id)arg1 includeHandwriting:(char)arg2 includeAngleGuides:(char)arg3 ;
-(id)snapForPoint:(CGPoint)arg1 withPointPrimitives:(id)arg2 linePrimitives:(id)arg3 pointSnapThreshold:(float)arg4 lineSnapThreshold:(float)arg5 ;
-(id)init;
-(NSArray *)lines;
-(void)setSearchResults:(NSSet *)arg1 ;
-(NSSet *)searchResults;
-(NSArray *)pages;
-(id)allPages;
@end

