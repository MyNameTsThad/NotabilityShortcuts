/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:16 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@interface APMAnalytics : NSObject
+(void)logEventWithName:(id)arg1 parameters:(id)arg2 ;
+(void)setUserPropertyString:(id)arg1 forName:(id)arg2 ;
+(void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3 ;
+(id)addLogEventListener:(/*^block*/id)arg1 ;
+(void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3 ;
+(void)setScreenName:(id)arg1 screenClass:(id)arg2 ;
+(id)appInstanceID;
+(void)resetAnalyticsData;
+(void)setLogEventInterceptor:(/*^block*/id)arg1 ;
+(void)removeLogEventListener:(id)arg1 ;
+(void)notifyEventListeners:(id)arg1 ;
+(void)setOpenURLListener:(/*^block*/id)arg1 ;
+(void)logEventWithOrigin:(id)arg1 isPublicEvent:(char)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(char)arg6 ignoreInterceptor:(char)arg7 ;
+(void)setInternalUserProperty:(id)arg1 forName:(id)arg2 ;
+(void)userPropertiesIncludingInternal:(char)arg1 queue:(id)arg2 callback:(/*^block*/id)arg3 ;
+(void)startWithAppID:(id)arg1 origin:(id)arg2 options:(id)arg3 ;
+(void)handleOpenURL:(id)arg1 ;
+(void)dispatchAsyncOnSerialQueue:(/*^block*/id)arg1 ;
+(void)queueOperationWithBlock:(/*^block*/id)arg1 ;
+(void)unsuspendOperationQueue;
+(double)loadTimestamp;
+(void)createAppDelegateProxy;
+(void)maybeEnableTagManager;
+(void)observeNotificationsForAnalyticsConfiguration:(id)arg1 ;
+(void)handleSetEnabled:(id)arg1 ;
+(void)handleSetMinimumSessionInterval:(id)arg1 ;
+(void)handleSetSessionTimeoutInterval:(id)arg1 ;
+(void)setAnalyticsEnabled:(char)arg1 ;
+(void)notifyEventListenersOnSerialQueue:(id)arg1 ;
+(void)logEventWithOrigin:(id)arg1 isPublicEvent:(char)arg2 name:(id)arg3 parameters:(id)arg4 ;
+(void)logEventOnSerialQueueWithOrigin:(id)arg1 isPublicEvent:(char)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(char)arg6 ignoreInterceptor:(char)arg7 addedScreenParameters:(id)arg8 ;
+(id)eventsToLogWithEventID:(long long)arg1 origin:(id)arg2 isPublic:(char)arg3 name:(id)arg4 timestamp:(double)arg5 parameters:(id)arg6 ;
+(void)logEventsOnWorkerQueue:(id)arg1 notifyEventListeners:(char)arg2 ;
+(void)removeUserAttributeForName:(id)arg1 ;
+(void)removeInternalUserAttributeForName:(id)arg1 ;
+(char)isCurrentQueueSerialQueue;
+(void)setUserAttributeNumber:(id)arg1 forName:(id)arg2 ;
+(id)sharedInstance;
+(void)initialize;
+(void)load;
+(void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2 ;
+(void)handleUserActivity:(id)arg1 ;
+(void)setUserID:(id)arg1 ;
+(void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3 ;
-(void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3 ;
-(void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)dealloc;
-(void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2 ;
@end

