/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:16 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GoogleUtilities/GULNetworkLoggerDelegate.h>
#import <Notability/GULNetworkReachabilityDelegate.h>

@class NSString, APMAlarm, APMAudience, APMDatabase, APMIdentity, GULNetwork, APMPersistedConfig, APMRemoteConfig, APMScheduler, APMSessionReporter, APMSearchAdReporter, NSArray;

@interface APMMeasurement : NSObject <GULNetworkLoggerDelegate, GULNetworkReachabilityDelegate> {

	NSString* _databaseName;
	long _initializeComponentsOnce;
	APMAlarm* _alarm;
	APMAudience* _audience;
	APMDatabase* _database;
	APMIdentity* _identity;
	GULNetwork* _network;
	APMPersistedConfig* _persistedConfig;
	APMRemoteConfig* _remoteConfig;
	APMScheduler* _scheduler;
	APMSessionReporter* _sessionReporter;
	APMSearchAdReporter* _searchAdReporter;
	NSArray* _uploadingBundleIDs;
	NSString* _previousGMPAppID;
	AI _backgroundUpdateTask;
	double _initTimestamp;
	double _suspendedUploadTimestamp;
	char _needFirstOpenAfterReset;
	NSString* _appID;
	NSArray* _safelistedEvents;
	char _enabled;
	char _isNetworkRequestPending;
	char _wasEnabledDuringInitialization;
	char _isAnalyticsCollectionEnabled;
	char _isAnalyticsCollectionDeactivated;

}

@property (nonatomic,readonly) char isNetworkRequestPending;                      //@synthesize isNetworkRequestPending=_isNetworkRequestPending - In the implementation block
@property (nonatomic,readonly) char wasEnabledDuringInitialization;               //@synthesize wasEnabledDuringInitialization=_wasEnabledDuringInitialization - In the implementation block
@property (assign,nonatomic) char isAnalyticsCollectionEnabled;                   //@synthesize isAnalyticsCollectionEnabled=_isAnalyticsCollectionEnabled - In the implementation block
@property (assign,nonatomic) char isAnalyticsCollectionDeactivated;               //@synthesize isAnalyticsCollectionDeactivated=_isAnalyticsCollectionDeactivated - In the implementation block
@property (assign,getter=isEnabled,nonatomic) char enabled;                       //@synthesize enabled=_enabled - In the implementation block
@property (nonatomic,readonly) APMIdentity * identity;                            //@synthesize identity=_identity - In the implementation block
@property (nonatomic,readonly) APMScheduler * scheduler;                          //@synthesize scheduler=_scheduler - In the implementation block
@property (nonatomic,readonly) APMDatabase * database;                            //@synthesize database=_database - In the implementation block
@property (nonatomic,readonly) APMSessionReporter * sessionReporter;              //@synthesize sessionReporter=_sessionReporter - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initializeSharedInstanceWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(char)arg2 isAnalyticsCollectionDeactivated:(char)arg3 safelistedEvents:(id)arg4 ;
+(id)deepLinkFromUserActivity:(id)arg1 ;
+(id)remoteConfig;
+(void)handleAppDidFinishLaunching:(id)arg1 ;
+(char)hasSharedInstance;
+(id)sharedInstance;
+(void)load;
+(id)monitor;
-(void)userAttributeWithName:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)resetAnalyticsData;
-(char)isAnalyticsCollectionDeactivated;
-(char)isAnalyticsCollectionEnabled;
-(void)setMinimumSessionInterval:(double)arg1 ;
-(void)setSessionTimeoutInterval:(double)arg1 ;
-(char)wasEnabledDuringInitialization;
-(void)handleNonFirstOpenEventURL:(id)arg1 eventTimestampInSeconds:(double)arg2 ;
-(void)setUserAttribute:(id)arg1 ;
-(void)removeUserAttribute:(id)arg1 ;
-(void)userPropertiesIncludingInternal:(char)arg1 callback:(/*^block*/id)arg2 ;
-(void)maxUserPropertiesForOrigin:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)filterPurchaseTransactions:(id)arg1 callback:(/*^block*/id)arg2 ;
-(id)initWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(char)arg2 isAnalyticsCollectionDeactivated:(char)arg3 safelistedEvents:(id)arg4 ;
-(void)handleOpenURL:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3 ;
-(void)handleDebugModeWithURL:(id)arg1 ;
-(void)handleDeepLink:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3 ;
-(void)handleOpenURLOnWorkerQueue:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3 ;
-(char)isValidCampaignURLParamDictionary:(id)arg1 ;
-(void)handleEventOnWorkerQueue:(id)arg1 ;
-(id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 network:(id)arg3 scheduler:(id)arg4 alarm:(id)arg5 appID:(id)arg6 isAnalyticsCollectionEnabled:(char)arg7 isAnalyticsCollectionDeactivated:(char)arg8 safelistedEvents:(id)arg9 ;
-(char)shouldEnableMeasurement;
-(void)swapBackgroundTaskWithNewTaskID:(unsigned)arg1 ;
-(void)setEnabledOnWorkerQueue:(char)arg1 ;
-(char)startMeasurementOnWorkerQueue;
-(char)shouldWipeDataWithAppID:(id)arg1 appIDFromGMP:(id)arg2 appIDFromAdMob:(id)arg3 persistedAppIDFromGMP:(id)arg4 persistedAppIDFromAdMob:(id)arg5 ;
-(void)wipeoutAnalyticsDataAndResetComponents;
-(void)backfillSessionNumber;
-(void)reportFirstOpenOnWorkerQueue;
-(void)reportStoredCampaignEventOnWorkerQueue:(id)arg1 ;
-(void)reportAppUpdateOnWorkerQueue;
-(void)reportOSUpdateOnWorkerQueue;
-(void)handleAppDidBecomeActiveEvent:(id)arg1 ;
-(void)handleAppWillResignActiveEvent:(id)arg1 ;
-(void)handleAppWillEnterForegroundNotification:(id)arg1 ;
-(void)updateSchedule;
-(void)setUserAttributeOnWorkerQueue:(id)arg1 ;
-(char)isAppUpdateWithAnalytics;
-(void)reportSessionStartOnWorkerQueueWithTimestamp:(double)arg1 ;
-(long long)timestampMillisRoundedUpToNextHour:(long long)arg1 ;
-(void)terminateBackgroundTask;
-(char)hasDataToUpload;
-(double)nextUploadingTime;
-(char)isNetworkReadyForRequest;
-(char)bundleRawEvents;
-(void)fetchRemoteConfig;
-(id)filteredBundlesWithCompatibleAppID:(id)arg1 resettableDeviceID:(id)arg2 vendorDeviceID:(id)arg3 bundlesToUpload:(id)arg4 ;
-(void)setUploadInProgressWithBundleIDs:(id)arg1 ;
-(void)networkUploadCompletionHandlerWithResponse:(id)arg1 error:(id)arg2 ;
-(void)incrementRetryCounter;
-(char)removeBundlesFromDatabaseWithIDs:(id)arg1 ;
-(void)writeEventOnWorkerQueue:(id)arg1 ;
-(void)maybeAddDebugAndRealtimeParameters:(id)arg1 ;
-(id)createRawEventMetadataWithUserAttributes:(id)arg1 ;
-(void)removeUserAttributeOnWorkerQueue:(id)arg1 ;
-(int)setUserPropertyInDatabaseOnWorkerQueue:(id)arg1 ;
-(id)sampleEvents:(id)arg1 error:(id*)arg2 ;
-(void)networkRemoteConfigFetchCompletionHandler:(id)arg1 data:(id)arg2 error:(id)arg3 ;
-(void)uploadDataOrRegisterAlarm;
-(char)canEventBeSampled:(id)arg1 ;
-(char)isEventBundledAfterRoll:(int)arg1 ;
-(id)fileAttributesForPath:(id)arg1 ;
-(double)firstOpenTimestamp;
-(APMSessionReporter *)sessionReporter;
-(char)isNetworkRequestPending;
-(void)setIsAnalyticsCollectionEnabled:(char)arg1 ;
-(void)setIsAnalyticsCollectionDeactivated:(char)arg1 ;
-(void)GULNetwork_logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 ;
-(void)reachabilityDidChange;
-(void)GULNetwork_logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 contexts:(id)arg4 ;
-(void)GULNetwork_logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 ;
-(void)dealloc;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(APMIdentity *)identity;
-(void)logEvent:(id)arg1 ;
-(APMDatabase *)database;
-(void)uploadData;
-(APMScheduler *)scheduler;
@end

