/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:08 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <UIKit/UIView.h>
#import <Notability/DrawObjectInputConverterProtocol.h>
#import <Notability/GLPopoverControllerDelegate.h>

@class Figure, UIColor, UITouch, Cropper, BackgroundLayerDelegate, ForegroundLayerDelegate, DrawObject, PrimitiveResizer, PaintObject, UITextField, UIView, GLPopoverController, UIButton, GLNotesSlider, NSString;

@interface PaintingView : UIView <DrawObjectInputConverterProtocol, GLPopoverControllerDelegate> {

	Figure* figure;
	int drawMode;
	UIColor* activeStrokeColor;
	UIColor* activeFillColor;
	float activeStrokeWidth;
	float activeFillAlpha;
	float activeStrokeAlpha;
	UIColor* savedStrokeColor;
	UIColor* savedFillColor;
	float savedStrokeWidth;
	float savedStrokeAlpha;
	float savedFillAlpha;
	float displayZoom;
	CGPoint displayTranslate;
	char isScaling;
	CGPoint initialCenter;
	float initialSeparation;
	UITouch* scaleTouch1;
	UITouch* scaleTouch2;
	Cropper* cropper;
	BackgroundLayerDelegate* bgLayerDelegate;
	ForegroundLayerDelegate* fgLayerDelegate;
	DrawObject* selectedShape;
	PrimitiveResizer* resizer;
	PaintObject* currentPaintObject;
	UITextField* textField;
	UIView* textFieldBackground;
	char keyboardShown;
	GLPopoverController* fontSizePopUp;
	UIButton* fontSizeButton;
	GLNotesSlider* fontSizeSlider;
	char didCrop;
	float drawScale;

}

@property (nonatomic,retain) UIColor * activeStrokeColor; 
@property (nonatomic,retain) UIColor * activeFillColor; 
@property (assign,nonatomic) float activeStrokeAlpha; 
@property (assign,nonatomic) float activeFillAlpha; 
@property (nonatomic,retain) UITouch * scaleTouch1; 
@property (nonatomic,retain) UITouch * scaleTouch2; 
@property (nonatomic,retain) UIColor * savedStrokeColor; 
@property (nonatomic,retain) UIColor * savedFillColor; 
@property (assign,nonatomic) float savedStrokeWidth; 
@property (assign,nonatomic) float savedStrokeAlpha; 
@property (assign,nonatomic) float savedFillAlpha; 
@property (nonatomic,retain) PaintObject * currentPaintObject; 
@property (nonatomic,readonly) Cropper * cropper; 
@property (nonatomic,__weak,readonly) Figure * figure; 
@property (nonatomic,retain) DrawObject * selectedShape; 
@property (assign,nonatomic) int drawMode; 
@property (nonatomic,readonly) float drawScale; 
@property (nonatomic,readonly) char didCrop; 
@property (assign,nonatomic) float activeStrokeWidth; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CGAffineTransform)canvasToViewTransform;
-(CGPoint)convertPointToCanvas:(CGPoint)arg1 fromView:(id)arg2 ;
-(void)cropRectWasModifiedWithCropper:(id)arg1 ;
-(void)setIsInCropMode:(char)arg1 ;
-(char)isInCropMode;
-(CGAffineTransform)canvasViewTransform;
-(void)setupPanZoomFromFigure;
-(PaintObject *)currentPaintObject;
-(void)saveActiveDrawingParameters;
-(float)getZoomAdjustAllowMagnification:(char)arg1 ;
-(void)strokeDidComplete:(id)arg1 ;
-(void)selectedRectDidChange:(id)arg1 ;
-(void)hideUIMenuController:(id)arg1 ;
-(void)handleFigureModified:(id)arg1 ;
-(void)setupTextField;
-(void)sendToFront:(id)arg1 ;
-(void)sendToBack:(id)arg1 ;
-(void)sendForward:(id)arg1 ;
-(void)sendBackward:(id)arg1 ;
-(DrawObject *)selectedShape;
-(void)showKeyboardForTextEdit:(id)arg1 ;
-(Cropper *)cropper;
-(void)setCropRectFromFigure;
-(void)setCurrentPaintObject:(PaintObject *)arg1 ;
-(void)setSelectedShape:(DrawObject *)arg1 ;
-(void)setActiveDrawingParametersFromObject:(id)arg1 ;
-(void)updateTextField;
-(CGAffineTransform)transformForPanZoom;
-(CGAffineTransform)canvasTransform;
-(CGAffineTransform)viewTransform;
-(void)teardownPopUps;
-(void)finishCurrentPaintObject;
-(float)activeStrokeAlpha;
-(float)activeFillAlpha;
-(void)setScaleTouch1:(UITouch *)arg1 ;
-(void)setScaleTouch2:(UITouch *)arg1 ;
-(id)frontmostShape:(CGPoint)arg1 ;
-(void)setActiveDrawingParameters:(id)arg1 ;
-(char)handlePanZoomTouch:(id)arg1 withChangeRect:(CGRect*)arg2 ;
-(char)drawModeIsSelect;
-(char)handleSelectResizeTouch:(id)arg1 withChangeRect:(CGRect*)arg2 ;
-(char)drawModeIsCreatePrimitive;
-(char)handleCreateNewDrawObjectTouch:(id)arg1 withChangeRect:(CGRect*)arg2 ;
-(UIColor *)activeStrokeColor;
-(void)setSavedStrokeColor:(UIColor *)arg1 ;
-(UIColor *)activeFillColor;
-(void)setSavedFillColor:(UIColor *)arg1 ;
-(float)activeStrokeWidth;
-(void)setSavedStrokeWidth:(float)arg1 ;
-(void)setSavedStrokeAlpha:(float)arg1 ;
-(void)setSavedFillAlpha:(float)arg1 ;
-(UIColor *)savedStrokeColor;
-(void)setActiveStrokeColor:(UIColor *)arg1 ;
-(UIColor *)savedFillColor;
-(void)setActiveFillColor:(UIColor *)arg1 ;
-(float)savedStrokeWidth;
-(void)setActiveStrokeWidth:(float)arg1 ;
-(float)savedStrokeAlpha;
-(void)setActiveStrokeAlpha:(float)arg1 ;
-(float)savedFillAlpha;
-(void)setActiveFillAlpha:(float)arg1 ;
-(void)setActiveFillColor:(id)arg1 alpha:(float)arg2 ;
-(void)setActiveStrokeColor:(id)arg1 alpha:(float)arg2 ;
-(void)finishEditingTextObject:(id)arg1 ;
-(void)hideKeyboardForTextEdit;
-(void)restoreActiveDrawingParameters;
-(void)setDisplayZoomTranslateFromScale;
-(UITouch *)scaleTouch1;
-(UITouch *)scaleTouch2;
-(float)screenPointsToCanvas:(float)arg1 ;
-(void)resetFramesForSizeChange;
-(id)initWithFrame:(CGRect)arg1 figure:(id)arg2 ;
-(void)toolbarDidPresentEditor:(id)arg1 ;
-(void)toolbarDidDismissEditor:(id)arg1 ;
-(void)updateSelectedShapeProperties;
-(float)drawScale;
-(Figure *)figure;
-(char)didCrop;
-(void)handleKeyboardNotification:(id)arg1 ;
-(void)fontButtonAction:(id)arg1 ;
-(void)fontSizeSliderAction:(id)arg1 ;
-(void)dealloc;
-(void)didMoveToWindow;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(char)canBecomeFirstResponder;
-(int)drawMode;
-(void)setDrawMode:(int)arg1 ;
-(void)delete:(id)arg1 ;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(char)popoverControllerShouldDismissPopover:(id)arg1 ;
-(void)textFieldDidChange:(id)arg1 ;
-(CGRect)cropRect;
-(void)erase;
-(void)showMenu:(id)arg1 ;
@end

