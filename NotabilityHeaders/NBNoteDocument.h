/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:08 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <Notability/NBNoteDocumentContentSource.h>
#import <Notability/NBNoteDocumentThumbnailCacheDataSource.h>
#import <Notability/SessionInfoDelegate.h>

@protocol OS_dispatch_queue, NBNoteDocumentDelegate, NBNoteDocumentViewDelegate, NBNoteDocumentContentAccessListener;
@class NSURL, NoteTakingSession, NSString, GLRecursiveReadWriteLock, NSCondition, NSTimer, NSRecursiveLock, NSLock, NSMetadataItem, SessionInfo, NSObject, NSOperationQueue, NSError, _TtC6GLCore29ThrottledActionDispatchSource, NSNumber, _TtC6GLCore29DebouncedActionDispatchSource, NBNoteDocumentPresenter, NBNoteDocumentThumbnailsCache, NBSubject, NSFileWrapper, NSDate, NSFileManager, NSUndoManager, NSUserActivity;

@interface NBNoteDocument : NSObject <NBNoteDocumentContentSource, NBNoteDocumentThumbnailCacheDataSource, SessionInfoDelegate> {

	NoteTakingSession* _note;
	NSString* _name;
	GLRecursiveReadWriteLock* contentAccessRWLock;
	NSCondition* contentAccessCondition;
	NSURL* _contentAccessURLOverride;
	NSTimer* _documentUpdateTimer;
	GLRecursiveReadWriteLock* performNoteAccessRWLock;
	NSRecursiveLock* loadAndTeardownNoteLock;
	NSLock* documentPresenterCreationLock;
	NSLock* _thumbnailsLock;
	NSString* _subject;
	NSString* _metadataItemModifiedDateString;
	NSMetadataItem* _metadataItem;
	SessionInfo* _metadata;
	NSObject*<OS_dispatch_queue> serialAccessQueue;
	NSOperationQueue* openCloseOperationQueue;
	NSOperationQueue* saveOperationQueue;
	char _isDownloading;
	float _percentDownloaded;
	char _isViewOnly;
	char _hasNonUndoableChanges;
	char _hasPersistedContent;
	char _isNewlyCreated;
	char _needsRegenerationOfThumbnail;
	char _uncoordinatedReadAccessEnabled;
	char _metadataOutOfDate;
	char _loadingFromContents;
	char _isClosing;
	NSString* _lastViewedDateString;
	NSURL* _fileURL;
	NSString* _packagePath;
	NSError* _lastError;
	_TtC6GLCore29ThrottledActionDispatchSource* _saveUserActivityThrottledAction;
	id<NBNoteDocumentDelegate> _delegate;
	id<NBNoteDocumentViewDelegate> _viewDelegate;
	NSNumber* _isDownloadedBacking;
	_TtC6GLCore29DebouncedActionDispatchSource* _reindexDocumentAction;
	NBNoteDocumentPresenter* _document;
	NBNoteDocumentThumbnailsCache* _thumbnailsCache;
	NBSubject* _nbSubject;
	int _noteAccessCount;
	int _pendingTeardownCount;
	id<NBNoteDocumentContentAccessListener> _contentListener;
	NSFileWrapper* _pendingImportFileWrapper;
	NSDate* _lastUpdatedDate;
	NSURL* _pendingSaveURL;
	NSDate* _lastDownloadRequestedDate;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSURL * recordingsLibraryURL; 
@property (readonly,nonatomic) char hasPDFFiles; 
@property (nonatomic,retain) _TtC6GLCore29DebouncedActionDispatchSource * reindexDocumentAction;                        //@synthesize reindexDocumentAction=_reindexDocumentAction - In the implementation block
@property (nonatomic,retain) _TtC6GLCore29ThrottledActionDispatchSource * saveUserActivityThrottledAction;              //@synthesize saveUserActivityThrottledAction=_saveUserActivityThrottledAction - In the implementation block
@property (nonatomic,retain) NBNoteDocumentPresenter * document;                                                        //@synthesize document=_document - In the implementation block
@property (nonatomic,retain) NSString * packagePath;                                                                    //@synthesize packagePath=_packagePath - In the implementation block
@property (nonatomic,retain) NSURL * fileURL;                                                                           //@synthesize fileURL=_fileURL - In the implementation block
@property (nonatomic,retain) NoteTakingSession * note;                                                                  //@synthesize note=_note - In the implementation block
@property (nonatomic,retain) SessionInfo * metadata; 
@property (retain) NBNoteDocumentThumbnailsCache * thumbnailsCache;                                                     //@synthesize thumbnailsCache=_thumbnailsCache - In the implementation block
@property (__weak,readonly) NSFileManager * fileManager; 
@property (nonatomic,retain) NSString * subject; 
@property (nonatomic,retain) NBSubject * nbSubject;                                                                     //@synthesize nbSubject=_nbSubject - In the implementation block
@property (retain) NSError * lastError;                                                                                 //@synthesize lastError=_lastError - In the implementation block
@property (assign) int noteAccessCount;                                                                                 //@synthesize noteAccessCount=_noteAccessCount - In the implementation block
@property (assign) int pendingTeardownCount;                                                                            //@synthesize pendingTeardownCount=_pendingTeardownCount - In the implementation block
@property (assign) char hasNonUndoableChanges;                                                                          //@synthesize hasNonUndoableChanges=_hasNonUndoableChanges - In the implementation block
@property (assign) char hasPersistedContent;                                                                            //@synthesize hasPersistedContent=_hasPersistedContent - In the implementation block
@property (assign) char isNewlyCreated;                                                                                 //@synthesize isNewlyCreated=_isNewlyCreated - In the implementation block
@property (assign) char needsRegenerationOfThumbnail;                                                                   //@synthesize needsRegenerationOfThumbnail=_needsRegenerationOfThumbnail - In the implementation block
@property (assign,getter=isUncoordinatedReadAccessEnabled,nonatomic) char uncoordinatedReadAccessEnabled;               //@synthesize uncoordinatedReadAccessEnabled=_uncoordinatedReadAccessEnabled - In the implementation block
@property (assign,nonatomic,__weak) id<NBNoteDocumentContentAccessListener> contentListener;                            //@synthesize contentListener=_contentListener - In the implementation block
@property (nonatomic,retain) NSFileWrapper * pendingImportFileWrapper;                                                  //@synthesize pendingImportFileWrapper=_pendingImportFileWrapper - In the implementation block
@property (retain) NSMetadataItem * metadataItem; 
@property (nonatomic,retain) NSString * metadataItemModifiedDateString; 
@property (nonatomic,retain) NSTimer * documentUpdateTimer;                                                             //@synthesize documentUpdateTimer=_documentUpdateTimer - In the implementation block
@property (retain) NSDate * lastUpdatedDate;                                                                            //@synthesize lastUpdatedDate=_lastUpdatedDate - In the implementation block
@property (assign) char metadataOutOfDate;                                                                              //@synthesize metadataOutOfDate=_metadataOutOfDate - In the implementation block
@property (nonatomic,retain) NSURL * pendingSaveURL;                                                                    //@synthesize pendingSaveURL=_pendingSaveURL - In the implementation block
@property (assign) char loadingFromContents;                                                                            //@synthesize loadingFromContents=_loadingFromContents - In the implementation block
@property (retain) NSDate * lastDownloadRequestedDate;                                                                  //@synthesize lastDownloadRequestedDate=_lastDownloadRequestedDate - In the implementation block
@property (assign,nonatomic) char isClosing;                                                                            //@synthesize isClosing=_isClosing - In the implementation block
@property (nonatomic,retain) NSString * lastViewedDateString;                                                           //@synthesize lastViewedDateString=_lastViewedDateString - In the implementation block
@property (nonatomic,retain) NSUndoManager * undoManager; 
@property (assign,nonatomic) char isViewOnly;                                                                           //@synthesize isViewOnly=_isViewOnly - In the implementation block
@property (readonly) NSString * uuid; 
@property (readonly) NSUserActivity * userActivity; 
@property (assign,nonatomic,__weak) id<NBNoteDocumentDelegate> delegate;                                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<NBNoteDocumentViewDelegate> viewDelegate;                                        //@synthesize viewDelegate=_viewDelegate - In the implementation block
@property (nonatomic,retain) NSNumber * isDownloadedBacking;                                                            //@synthesize isDownloadedBacking=_isDownloadedBacking - In the implementation block
+(id)genericLoadNoteFailureError;
+(id)noteURLForPackagePath:(id)arg1 ;
+(id)sharedStartDownloadingQueue;
+(id)sanitizeName:(id)arg1 ;
+(id)serialAccessDispatchQueue;
+(id)genericLoadMetadataError;
+(char)isKeyPathMetadata:(id)arg1 ;
+(id)observingKeyPaths;
+(id)noteDictionaryFromUserDefaults;
+(char)isKeyPathSortable:(id)arg1 ;
+(id)throttledNotificationQueue;
+(id)searchableItemSerialQueue;
+(void)signUpForDocumentUpdates:(id)arg1 selector:(SEL)arg2 ;
+(void)unsignUpForDocumentUpdates:(id)arg1 ;
+(id)unpackagingOperationForImportWithFormatDelegate:(id)arg1 contentsPath:(id)arg2 operation:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
+(id)unimportableFileTypeError;
+(char)importNoteWithContentsAtPath:(id)arg1 importOperation:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
+(char)checkDownloaded:(id)arg1 ;
+(id)packagingOperationQueue;
+(char)isRessourceStatusDownloaded:(id)arg1 ;
+(char)isRessourceDownloadedAtURL:(id)arg1 ;
+(char)gl_checkBasicNoteRequirementsInContents:(id)arg1 strict:(char)arg2 ;
+(void)runTest;
+(id)fileManager;
-(void)setViewDelegate:(id<NBNoteDocumentViewDelegate>)arg1 ;
-(NBSubject *)nbSubject;
-(void)thumbnailWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)setIsViewOnly:(char)arg1 ;
-(char)isViewOnly;
-(_TtC6GLCore29ThrottledActionDispatchSource *)saveUserActivityThrottledAction;
-(char)hasRecordings;
-(void)conflictsResolvedWithSelectedVersions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)conflictedFileVersionsToPresent;
-(char)documentPresenterExists;
-(id)hasConflicts;
-(id)genericLoadNoteFailureError;
-(void)updateLastViewedDate;
-(id)cachedViewState;
-(void)updateSearchableItemContentAttributeSetThumbnailWithImage:(id)arg1 ;
-(void)setNeedsSaveIfOpen;
-(char)isDownloadedHighPrioritySynchronous;
-(void)startDownloading;
-(id)initForCreationWithName:(id)arg1 subject:(id)arg2 ;
-(void)performNoteAccessBlock:(/*^block*/id)arg1 ;
-(void)setContentTypeDidChange:(int)arg1 ;
-(char)hasSavingError;
-(id)__initWithFileURL:(id)arg1 shouldBeginKVO:(char)arg2 ;
-(void)setReindexDocumentAction:(_TtC6GLCore29DebouncedActionDispatchSource *)arg1 ;
-(void)setSaveUserActivityThrottledAction:(_TtC6GLCore29ThrottledActionDispatchSource *)arg1 ;
-(void)beginKeyValueObserving;
-(id)initWithFileURL:(id)arg1 shouldBeginKVO:(char)arg2 ;
-(void)setMetadataOutOfDate:(char)arg1 ;
-(void)setupForCreation:(char)arg1 ;
-(char)loadMetadata;
-(id)__initWithFileURL:(id)arg1 ;
-(void)setNoteAccessCount:(int)arg1 ;
-(void)setPendingTeardownCount:(int)arg1 ;
-(void)setThumbnailsWithIgnoreExisting:(char)arg1 settingBlock:(/*^block*/id)arg2 ;
-(void)setHasPersistedContent:(char)arg1 ;
-(void)setNeedsRegenerationOfThumbnail:(char)arg1 ;
-(_TtC6GLCore29DebouncedActionDispatchSource *)reindexDocumentAction;
-(void)endKeyValueObserving;
-(id)loadNoteWithFileWrapper:(id)arg1 ;
-(id)objectIniCloudWithPreferredFilename:(id)arg1 ;
-(int)noteAccessCount;
-(id)loadNoteDataWithFileWrapper:(id)arg1 ;
-(id)loadNote;
-(char)teardownNoteIfNeeded;
-(int)pendingTeardownCount;
-(char)loadMetadataWithFileWrapper:(id)arg1 ;
-(char)metadataOutOfDate;
-(id)getSessionInfoFromOldStores;
-(void)saveMetadataToDiskWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)invalidateThumbnailCache;
-(void)handleUndoManagerChangeNotification:(id)arg1 ;
-(NSURL *)pendingSaveURL;
-(void)createPresenterIfNeeded;
-(void)setUncoordinatedReadAccessEnabled:(char)arg1 ;
-(void)postNoteContentDidChangeNotification;
-(void)validateFileURL;
-(void)teardownPresenter;
-(void)executePendingTeardowns;
-(char)isNoteNewAndEmpty;
-(void)__closeAndScheduleDeleteForNewAndEmptyNoteWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)isNewlyCreated;
-(void)setIsNewlyCreated:(char)arg1 ;
-(char)needsRegenerationOfThumbnail;
-(NBNoteDocumentThumbnailsCache *)thumbnailsCache;
-(void)setHasNonUndoableChanges:(char)arg1 ;
-(void)setPendingSaveURL:(NSURL *)arg1 ;
-(void)setPendingImportFileWrapper:(NSFileWrapper *)arg1 ;
-(void)proxySaveToURL:(id)arg1 saveOperation:(int)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id<NBNoteDocumentViewDelegate>)viewDelegate;
-(void)_conflictStateMayHaveChangedPresentOrUpdateConflictResolver;
-(void)setLoadingFromContents:(char)arg1 ;
-(void)encodeObject:(id)arg1 preferredFilename:(id)arg2 intoFileWrapper:(id)arg3 ;
-(NSFileWrapper *)pendingImportFileWrapper;
-(void)writeNoteToWrapper:(id)arg1 ;
-(id)directoryFileWrapperForPreferredFilename:(id)arg1 fromFileWrapper:(id)arg2 ;
-(void)_updateIndexWrappersFromDestinationFileWrapper:(id)arg1 ;
-(NSDate *)lastDownloadRequestedDate;
-(char)__canStartDownloading;
-(void)__startDownloading;
-(void)setLastDownloadRequestedDate:(NSDate *)arg1 ;
-(void)startDownloadingThrottled:(char)arg1 ;
-(void)updateSearchableItemContentAttributeSet;
-(void)setContentListener:(id<NBNoteDocumentContentAccessListener>)arg1 ;
-(char)hasNonUndoableChanges;
-(void)_registerSearchItemDidMoveFrom:(id)arg1 ;
-(id)newFileCoordinator;
-(void)moveToURL:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_registerSearchItemWasDeleted:(id)arg1 ;
-(void)packageToFolder:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)performAsynchronousSerialAccessBlock:(/*^block*/id)arg1 ;
-(void)setNbSubject:(NBSubject *)arg1 ;
-(void)setLastViewedDateString:(NSString *)arg1 ;
-(char)loadingFromContents;
-(char)checkStringEqualitySafeWithObj1:(id)arg1 against:(id)arg2 ;
-(void)documentURLDidUpdate;
-(void)bundleAndPostUpdateNotification;
-(id<NBNoteDocumentContentAccessListener>)contentListener;
-(char)hasPersistedContent;
-(char)__synchronousGetHighPriorityIsDownloaded;
-(id)lastChangeDate;
-(id)lastChangeDateForContentType:(int)arg1 ;
-(void)setIsDownloadedBacking:(NSNumber *)arg1 ;
-(void)setMetadataItemModifiedDateString:(NSString *)arg1 ;
-(id)modifiedDateString;
-(NSString *)metadataItemModifiedDateString;
-(id)megabyteSize;
-(char)exportedSinceLastSave;
-(int)documentVersion;
-(id)getSessionInfoFromUserDefaults;
-(id)generateInfoFromNoteTakingSession:(id)arg1 ;
-(void)setMetadataItem:(NSMetadataItem *)arg1 ;
-(void)thumbnailWithRank:(float)arg1 scale:(float)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)thumbnailFromCacheIfAvailableWithRank:(float)arg1 scale:(float)arg2 ;
-(void)resolveConflictWithCurrentVersionCompletion:(/*^block*/id)arg1 ;
-(void)resolveConflictWithFileVersion:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)saveVersionsToLibrary:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)postConflictResolutionErrorAlert:(id)arg1 ;
-(void)removeConflictedVersionsOfSelfWithCompletion:(/*^block*/id)arg1 ;
-(void)revertToCurrentVersionOfDocumentAndRemoveOthersWithCompletion:(/*^block*/id)arg1 ;
-(void)sessionInfoKeyPathDidUpdate:(id)arg1 change:(id)arg2 ;
-(id)initWithCachedMetadata:(id)arg1 ;
-(id)initWithPackagePath:(id)arg1 ;
-(id)initForCreationWithFileURL:(id)arg1 ;
-(id)loadFormattedStringTextData;
-(void)proxyUpdateChangeCount:(int)arg1 ;
-(void)saveToFileURLForOperation:(int)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)proxySavePresentedItemChangesWithCompletionHandler:(/*^block*/id)arg1 ;
-(/*^block*/id)proxyRevertToContentsOfURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)proxyDocumentStateDidChange;
-(void)proxyPresentedItemDidGainVersion:(id)arg1 ;
-(void)proxyPresentedItemDidLoseVersion:(id)arg1 ;
-(void)proxyAccommodateForPresentedItemDeletionWithCompletionHandler:(/*^block*/id)arg1 ;
-(/*^block*/id)proxyRelinquishPresentedItemToWriter:(/*^block*/id)arg1 ;
-(void)proxyHandleError:(id)arg1 ;
-(char)proxyLoadFromContents:(id)arg1 ofType:(id)arg2 error:(id*)arg3 ;
-(id)proxyContentsForType:(id)arg1 error:(id*)arg2 ;
-(char)proxyHasUnsavedChanges;
-(void)renameTo:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)deleteNoteWithCompletionHandler:(/*^block*/id)arg1 shouldMoveToRecentlyDeleted:(char)arg2 removeCoreSearchIndex:(char)arg3 ;
-(void)moveToSubject:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)searchTitleWithQuery:(id)arg1 operation:(id)arg2 ;
-(id)skipPermittingSearchTitleWithQuery:(id)arg1 operation:(id)arg2 ;
-(void)isDownloadedHighPriority:(/*^block*/id)arg1 ;
-(float)percentDownloaded;
-(CGSize)expectedThumbnailSizeForScale:(float)arg1 ;
-(NSString *)lastViewedDateString;
-(void)printDownloadStatus;
-(id)recoveryItem;
-(void)documentDidCompleteAutosyncWithPath:(id)arg1 ;
-(void)documentDidCompleteAutosyncWithPath:(id)arg1 metadata:(id)arg2 ;
-(void)setNeedsSync;
-(void)documentBegunSyncMoveFromPath:(id)arg1 toPath:(id)arg2 ;
-(void)fetchAndWriteMetadataToDiskAfterUpdate;
-(void)updateContentsWithMetadata:(id)arg1 ;
-(id)thumbnailFromCacheIfAvailable;
-(void)noteForSearch:(char)arg1 metadataOnly:(char)arg2 forAutosync:(char)arg3 completionBlock:(/*^block*/id)arg4 ;
-(char)isEqualToDocument:(id)arg1 ;
-(NSNumber *)isDownloadedBacking;
-(void)setThumbnailsCache:(NBNoteDocumentThumbnailsCache *)arg1 ;
-(char)isUncoordinatedReadAccessEnabled;
-(NSTimer *)documentUpdateTimer;
-(void)setDocumentUpdateTimer:(NSTimer *)arg1 ;
-(id)addFileAtURL:(id)arg1 toPendingImportFileWrapperFolder:(id)arg2 canRandomizeName:(char)arg3 ;
-(NSURL *)recordingsLibraryURL;
-(id)urlForPDFFileName:(id)arg1 ;
-(id)coordinatedAddFileAtURL:(id)arg1 toNoteBundleFolder:(id)arg2 ;
-(void)signUpForDocumentUpdates:(id)arg1 selector:(SEL)arg2 ;
-(char)previewForExportOperation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)exportToDataForPrintingWithOptions:(id)arg1 andCompletionHandler:(/*^block*/id)arg2 ;
-(void)saveToURLAndCloseIfNeeded:(id)arg1 forSaveOperation:(int)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)packageForExportWithOperation:(id)arg1 destinationPath:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)packageToPath:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)loadContentsFromDiskAndAddToPendingFileWrapper;
-(id)coordinateReadingWithBlock:(/*^block*/id)arg1 ;
-(void)addContentFilesAtPaths:(id)arg1 operation:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)_synchronousAddContentFileAtPath:(id)arg1 operation:(id)arg2 isPDF:(char*)arg3 ;
-(id)_importMediaAssetFromURL:(id)arg1 intoFolder:(id)arg2 ;
-(void)addContentFileAtPath:(id)arg1 operation:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)addFileAtURL:(id)arg1 toPendingImportFileWrapperFolder:(id)arg2 ;
-(char)importRecordingFromURL:(id)arg1 ;
-(char)unsafeUncoordinatedValidateContents;
-(char)gl_tryToDownloadAllNoteContents;
-(id)audioPlaybackInstanceForInfo:(id)arg1 error:(int*)arg2 ;
-(id)searchWithQuery:(id)arg1 maxResults:(int)arg2 operation:(id)arg3 ;
-(id)imageWithFilename:(id)arg1 ;
-(id)tempFileURLForDocument:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)itemProviderForFileRepresentation;
-(id)contentAccessURL;
-(id)contentAccessURLOverride;
-(id)detailedCoordinateReadingWithBlock:(/*^block*/id)arg1 ;
-(void)setContentAccessURLOverride:(id)arg1 ;
-(id)assetURLInResourceFolder:(id)arg1 filename:(id)arg2 ;
-(id)coordinateReadingIfNeededWithBlock:(/*^block*/id)arg1 ;
-(id)dataWithFilename:(id)arg1 folder:(id)arg2 ;
-(id)assetDataWithAssetsId:(id)arg1 filename:(id)arg2 ;
-(CGPDFDocumentRef)newPdfDocumentWithFilename:(id)arg1 ;
-(char)hasPDFFiles;
-(id)thumbnailDataWithFilename:(id)arg1 ;
-(void)performThumbnailsSourceAccessBlock:(/*^block*/id)arg1 ;
-(char)shouldCacheContinueWithBackgroundWrite:(id)arg1 ;
-(id)thumbnailsContainerURL;
-(void)thumbnailsCacheRequestsDiskAccess:(/*^block*/id)arg1 ;
-(void)runPresenterTest;
-(char)isDownloaded;
-(char)needsSync;
-(void)setDelegate:(id<NBNoteDocumentDelegate>)arg1 ;
-(void)dealloc;
-(id<NBNoteDocumentDelegate>)delegate;
-(void)setName:(id)arg1 ;
-(id)name;
-(NSUndoManager *)undoManager;
-(void)didReceiveMemoryWarning;
-(char)hasImages;
-(NSUserActivity *)userActivity;
-(id)allValues;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)initWithFileURL:(id)arg1 ;
-(NBNoteDocumentPresenter *)document;
-(NSString *)subject;
-(void)setSubject:(NSString *)arg1 ;
-(NSString *)uuid;
-(NSURL *)fileURL;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)hasUnsavedChanges;
-(void)setUndoManager:(NSUndoManager *)arg1 ;
-(void)closeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)enableEditing;
-(void)disableEditing;
-(void)setDocument:(NBNoteDocumentPresenter *)arg1 ;
-(NSMetadataItem *)metadataItem;
-(char)isClosed;
-(id)fullDescription;
-(NSString *)packagePath;
-(void)setPackagePath:(NSString *)arg1 ;
-(char)isOpen;
-(SessionInfo *)metadata;
-(void)setMetadata:(SessionInfo *)arg1 ;
-(id)creationDate;
-(void)prepareForSave;
-(NoteTakingSession *)note;
-(void)setNote:(NoteTakingSession *)arg1 ;
-(void)setFileURL:(NSURL *)arg1 ;
-(NSFileManager *)fileManager;
-(char)isDownloading;
-(id)creationDateString;
-(NSDate *)lastUpdatedDate;
-(void)setLastUpdatedDate:(NSDate *)arg1 ;
-(char)isClosing;
-(void)setIsClosing:(char)arg1 ;
-(NSError *)lastError;
-(void)setLastError:(NSError *)arg1 ;
-(id)modifiedDate;
-(void)updateModifiedDate;
-(void)setViewState:(id)arg1 ;
-(id)lastViewedDate;
@end

