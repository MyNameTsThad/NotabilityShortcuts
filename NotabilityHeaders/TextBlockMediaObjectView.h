/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:11 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <Notability/GenericMediaObjectView.h>
#import <Notability/RichMediaTouchInputManagerDelegate.h>
#import <Notability/RichMediaView.h>
#import <UIKit/UITextInput.h>
#import <UIKit/UIKeyInput.h>
#import <Notability/NBNoteControllerTextInputDelegate.h>

@class RichMediaCaretView, NSTimer, UILabel, NBTokenizer, GLPopoverController, RichMediaTouchInputManager, NBHighlightColorPickerManager, NBTextBlockController, NSString, UITextInputPasswordRules, UITextRange, NSDictionary, UITextPosition, UIView;

@interface TextBlockMediaObjectView : GenericMediaObjectView <RichMediaTouchInputManagerDelegate, RichMediaView, UITextInput, UIKeyInput, NBNoteControllerTextInputDelegate> {

	RichMediaCaretView* caretView;
	char caretBlinkState;
	NSTimer* caretBlinkTimer;
	CGRect caretRect;
	char shouldShowCaret;
	UILabel* textOverflowLabel;
	char isResizingWhileEditing;
	char isResigningFirstResponderForTyping;
	NBTokenizer* tokenizer;
	GLPopoverController* textInteractionPopover;
	char _isBeginningToEditText;
	RichMediaTouchInputManager* _inputManager;
	float _scaleFactor;
	NBHighlightColorPickerManager* _highlightColorPickerManager;

}

@property (nonatomic,retain) RichMediaTouchInputManager * inputManager;                                //@synthesize inputManager=_inputManager - In the implementation block
@property (assign,nonatomic) char isBeginningToEditText;                                               //@synthesize isBeginningToEditText=_isBeginningToEditText - In the implementation block
@property (nonatomic,retain) NBHighlightColorPickerManager * highlightColorPickerManager;              //@synthesize highlightColorPickerManager=_highlightColorPickerManager - In the implementation block
@property (assign,nonatomic) float scaleFactor;                                                        //@synthesize scaleFactor=_scaleFactor - In the implementation block
@property (assign,nonatomic) char isResizingWhileEditing; 
@property (nonatomic,readonly) CGRect caretRect; 
@property (nonatomic,readonly) NBTextBlockController * noteController; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int smartQuotesType; 
@property (assign,nonatomic) int smartDashesType; 
@property (assign,nonatomic) int smartInsertDeleteType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (nonatomic,copy) NSString * textContentType; 
@property (nonatomic,copy) UITextInputPasswordRules * passwordRules; 
@property (nonatomic,readonly) char hasText; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic,__weak) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) int selectionAffinity; 
@property (nonatomic,readonly) id insertDictationResultPlaceholder; 
-(NBTextBlockController *)noteController;
-(void)showEditMenuForSelection;
-(void)hideEditMenu;
-(void)showReplaceMenu;
-(void)replaceTextAtCaretNoReplacement;
-(void)replaceTextAtCaretChoice0;
-(void)replaceTextAtCaretChoice1;
-(void)replaceTextAtCaretChoice2;
-(void)textCheckerLearnSelectedWord;
-(void)textCheckerUnlearnSelectedWord;
-(void)_insertText:(id)arg1 ;
-(void)noteControllerWillInsertOrDeleteText:(id)arg1 ;
-(void)noteControllerDidInsertOrDeleteText:(id)arg1 ;
-(void)insertAttributedString:(id)arg1 ;
-(void)noteControllerCopy:(id)arg1 ;
-(void)speak:(id)arg1 ;
-(void)defineSelectedText;
-(void)noteController:(id)arg1 textLayoutRequiresExtraHeight:(float)arg2 ;
-(void)selectMediaObjectForEdit:(id)arg1 ;
-(void)deselectSelectedForEditingMediaObject;
-(void)showCaret;
-(void)noteControllerWantsToBlinkCaret;
-(void)moveCaretToPointBelowText:(CGPoint)arg1 ;
-(void)noteControllerWillMoveCaretToPointBelowText;
-(void)noteControllerDidMoveCaretToPointBelowText:(char)arg1 ;
-(void)noteControllerSelect:(id)arg1 ;
-(void)noteControllerSelectAll:(id)arg1 ;
-(void)noteControllerCut:(id)arg1 ;
-(void)noteControllerPaste:(id)arg1 ;
-(void)_paste:(id)arg1 ;
-(void)_paste:(id)arg1 options:(int)arg2 ;
-(char)noteControllerCanBecomeFirstResponder;
-(void)noteControllerWillBecomeFirstResponder;
-(void)noteControllerWillResignFirstResponder;
-(void)setTextOverflowFrame;
-(void)inputModeChanged;
-(void)handleApplicationWillChangeStatusBarOrientation:(id)arg1 ;
-(void)blinkCaret:(id)arg1 ;
-(CGRect)moveCaretToLocation:(int)arg1 displayCaret:(char)arg2 ;
-(void)setIsBeginningToEditText:(char)arg1 ;
-(CGRect)moveCaretToLocation:(int)arg1 displayCaret:(char)arg2 notify:(char)arg3 ;
-(void)inputManager_rectsForSelectionStartHandle:(CGRect*)arg1 endHandle:(CGRect*)arg2 ;
-(void)caretUpdateNotification:(id)arg1 ;
-(void)updateTextOverflowLabel;
-(NBHighlightColorPickerManager *)highlightColorPickerManager;
-(void)showEditMenuForRect:(CGRect)arg1 ;
-(void)inputManager_showCaretZoomViewForRect:(CGRect)arg1 ;
-(void)setHighlightColorPickerManager:(NBHighlightColorPickerManager *)arg1 ;
-(void)_initHighlightColorPickerManagerIfNeeded;
-(void)setCaretFrame:(CGRect)arg1 displayCaret:(char)arg2 ;
-(void)noteControllerWantsToShowCaret;
-(char)isBeginningToEditText;
-(CGPoint)inputManager_locationForTouch:(id)arg1 ;
-(char)inputManager_delegateContainsPoint:(CGPoint)arg1 ;
-(char)inputManager_shouldInsertTextBoxForTapPoint:(CGPoint)arg1 ;
-(void)inputManager_insertTextBoxAtPoint:(CGPoint)arg1 ;
-(void)inputManager_showEditMenuAtCaret;
-(void)inputManager_moveEditMenuToCaret;
-(void)inputManager_showEditMenuForSelection;
-(void)inputManager_hideEditMenu;
-(void)inputManager_hideCaretZoomView;
-(void)inputManager_showCaretZoomView;
-(void)inputManager_scrollTouchIntoView:(id)arg1 ;
-(void)inputManager_showPopoverForPDFHighlight:(id)arg1 forPage:(id)arg2 location:(CGPoint)arg3 ;
-(void)inputManager_showPopoverForTextHighlight:(id)arg1 location:(CGPoint)arg2 ;
-(char)inputManager_isLocationInSelectableText:(CGPoint)arg1 ;
-(char)inputManager_isLocationInSelectablePDFText:(CGPoint)arg1 ;
-(void)inputManager_didTapAndHoldAtLocationAwayFromText:(CGPoint)arg1 ;
-(void)inputManager_hideCaret;
-(void)passTouchesBeganToSuper:(id)arg1 event:(id)arg2 ;
-(void)passTouchesMovedToSuper:(id)arg1 event:(id)arg2 ;
-(void)passTouchesEndedToSuper:(id)arg1 event:(id)arg2 ;
-(void)passTouchesCanceledToSuper:(id)arg1 event:(id)arg2 ;
-(void)documentNeedsDisplayInDocumentContentRect:(CGRect)arg1 ;
-(void)textFormatDidChangeInRange:(NSRange)arg1 ;
-(void)beginEditingTextAtLocation:(CGPoint)arg1 ;
-(void)setIsResizingWhileEditing:(char)arg1 ;
-(char)hasTextToPaste;
-(char)isResizingWhileEditing;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)dealloc;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(id)nextResponder;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)didMoveToSuperview;
-(id)textInRange:(id)arg1 ;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionFromPosition:(id)arg1 offset:(int)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 ;
-(int)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(int)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2 ;
-(int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(id)textStylingAtPosition:(id)arg1 inDirection:(int)arg2 ;
-(UITextRange *)selectedTextRange;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(UITextRange *)markedTextRange;
-(NSDictionary *)markedTextStyle;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(UITextPosition *)beginningOfDocument;
-(UITextPosition *)endOfDocument;
-(id<UITextInputDelegate>)inputDelegate;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(id<UITextInputTokenizer>)tokenizer;
-(UIView *)textInputView;
-(void)setSelectionAffinity:(int)arg1 ;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(char)hasText;
-(CGRect)visibleRect;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)select:(id)arg1 ;
-(void)selectAll:(id)arg1 ;
-(void)delete:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(RichMediaTouchInputManager *)inputManager;
-(void)setObject:(id)arg1 ;
-(CGRect)caretRect;
-(float)scaleFactor;
-(void)setScaleFactor:(float)arg1 ;
-(void)pauseSpeaking:(id)arg1 ;
-(void)setInputManager:(RichMediaTouchInputManager *)arg1 ;
-(void)hideCaret;
@end

