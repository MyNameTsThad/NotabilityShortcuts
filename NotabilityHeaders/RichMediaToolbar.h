/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:08 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <Notability/GLRearrangableToolbar.h>
#import <Notability/TextStylingDelegate.h>
#import <Notability/GLSimpleFontPickerDelegate.h>
#import <Notability/FontPresetButtonDelegate.h>
#import <Notability/GLSegmentedControlDelegate.h>

@protocol RichMediaToolbarTextDelegate, TextStylingDelegate, RichMediaToolbarSessionManagerDelegate;
@class NSArray, GLRearrangableToolbarItem, UIButton, GLSegmentedFontStyleControl, UIView, UIColor, NSString;

@interface RichMediaToolbar : GLRearrangableToolbar <TextStylingDelegate, GLSimpleFontPickerDelegate, FontPresetButtonDelegate, GLSegmentedControlDelegate> {

	NSArray* allItems;
	GLRearrangableToolbarItem* unindentBarButton;
	GLRearrangableToolbarItem* indentBarButton;
	GLRearrangableToolbarItem* listPopoverBarButton;
	GLRearrangableToolbarItem* flexItem1;
	GLRearrangableToolbarItem* flexItem2;
	GLRearrangableToolbarItem* flexItem3;
	GLRearrangableToolbarItem* fontStyleToolbarItem;
	UIButton* unindentButton;
	UIButton* indentButton;
	UIButton* listPopoverButton;
	GLSegmentedFontStyleControl* fontStyleSegmentedControl;
	NSArray* fontPresetButtons;
	NSArray* fontPresetBarButtons;
	int previousListStyle;
	char keyboardIsLocked;
	char shouldAllowEditing;
	char presetPopoverIsActive;
	id<RichMediaToolbarTextDelegate> richMediaToolbarTextDelegate;
	id<TextStylingDelegate> textStylingDelegate;
	id<RichMediaToolbarSessionManagerDelegate> sessionManagerDelegate;
	char isUsingRightHandedLayout;
	char _provideFullTextFormatting;
	UIView* replacementKeyboardOrNil;
	int _universalSizeClass;
	int _boldState;
	int _italicState;
	int _underlineState;
	UIColor* _listStyleButtonSelectedForegroundColor;
	UIColor* _listStyleButtonSelectedBackgroundColor;

}

@property (assign,nonatomic) int boldState;                                                                         //@synthesize boldState=_boldState - In the implementation block
@property (assign,nonatomic) int italicState;                                                                       //@synthesize italicState=_italicState - In the implementation block
@property (assign,nonatomic) int underlineState;                                                                    //@synthesize underlineState=_underlineState - In the implementation block
@property (nonatomic,retain) UIColor * listStyleButtonSelectedForegroundColor;                                      //@synthesize listStyleButtonSelectedForegroundColor=_listStyleButtonSelectedForegroundColor - In the implementation block
@property (nonatomic,retain) UIColor * listStyleButtonSelectedBackgroundColor;                                      //@synthesize listStyleButtonSelectedBackgroundColor=_listStyleButtonSelectedBackgroundColor - In the implementation block
@property (assign,nonatomic,__weak) id<RichMediaToolbarSessionManagerDelegate> sessionManagerDelegate; 
@property (assign,nonatomic,__weak) id<RichMediaToolbarTextDelegate> richMediaToolbarTextDelegate; 
@property (assign,nonatomic,__weak) id<TextStylingDelegate> textStylingDelegate; 
@property (assign,nonatomic) char isUsingRightHandedLayout; 
@property (nonatomic,__weak,readonly) UIView * replacementKeyboardOrNil; 
@property (assign,nonatomic) char provideFullTextFormatting;                                                        //@synthesize provideFullTextFormatting=_provideFullTextFormatting - In the implementation block
@property (assign,nonatomic) int universalSizeClass;                                                                //@synthesize universalSizeClass=_universalSizeClass - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)presetTouchFinishedAction:(id)arg1 ;
-(void)updateToMatchTextStylingDelegate;
-(id<TextStylingDelegate>)textStylingDelegate;
-(void)textStyleSizeDidChange:(float)arg1 ;
-(void)textStyleFontDidChange:(id)arg1 ;
-(void)textStyleColorDidChange:(id)arg1 ;
-(id)textStyleRequestsFontDescriptor;
-(void)textStyleToggleBold;
-(void)textStyleToggleItalic;
-(void)textStyleToggleUnderline;
-(void)textStyleDelegateShouldAdoptFontDescriptor:(id)arg1 ;
-(void)simpleFontPicker:(id)arg1 selectedFontFamilyNamed:(id)arg2 ;
-(void)fontPresetShouldBeApplied:(id)arg1 ;
-(char)fontPresetShouldPresentPopover:(id)arg1 ;
-(void)fontPresetDidPresentPopover:(id)arg1 ;
-(void)fontPresetDidDismissPopover:(id)arg1 ;
-(void)setTextStylingDelegate:(id<TextStylingDelegate>)arg1 ;
-(id<RichMediaToolbarTextDelegate>)richMediaToolbarTextDelegate;
-(void)setRichMediaToolbarTextDelegate:(id<RichMediaToolbarTextDelegate>)arg1 ;
-(void)setSessionManagerDelegate:(id<RichMediaToolbarSessionManagerDelegate>)arg1 ;
-(void)setUniversalSizeClass:(int)arg1 ;
-(char)isUsingRightHandedLayout;
-(int)universalSizeClass;
-(void)setIsUsingRightHandedLayout:(char)arg1 ;
-(void)segmentedControl:(id)arg1 didSelectItemAtIndex:(int)arg2 ;
-(unsigned)segmentedControl:(id)arg1 requestsButtonStateAtIndex:(int)arg2 ;
-(void)setListStyleButtonSelectedBackgroundColor:(UIColor *)arg1 ;
-(void)setListStyleButtonSelectedForegroundColor:(UIColor *)arg1 ;
-(void)updateToMatchTextStylingDelegateAndForceRefresh:(char)arg1 ;
-(void)unindentButtonAction;
-(id)buttonWithImageKey:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
-(id)toolbarItemWithButton:(id)arg1 imageKey:(id)arg2 ;
-(void)indentButtonAction;
-(void)listPopoverButtonAction;
-(void)setProvideFullTextFormatting:(char)arg1 ;
-(void)presetTouchDownAction:(id)arg1 ;
-(id)presetNameForIndex:(int)arg1 ;
-(UIColor *)listStyleButtonSelectedForegroundColor;
-(UIColor *)listStyleButtonSelectedBackgroundColor;
-(int)boldState;
-(int)italicState;
-(int)underlineState;
-(void)setBoldState:(int)arg1 ;
-(void)setItalicState:(int)arg1 ;
-(void)setUnderlineState:(int)arg1 ;
-(void)_setButtonSelected:(id)arg1 ;
-(void)_setButtonDeselected:(id)arg1 ;
-(void)setFontToolsEnabled:(char)arg1 ;
-(void)setListStyleButton:(id)arg1 selected:(char)arg2 ;
-(void)noListButtonAction;
-(void)numberedListButtonAction;
-(void)numberedListButtonToggleAction;
-(void)bulletListButtonAction;
-(void)bulletListButtonToggleAction;
-(void)checkboxListButtonAction;
-(void)checkboxListButtonToggleAction;
-(void)boldButtonAction;
-(void)italicButtonAction;
-(void)underlineButtonAction;
-(void)caretForwardAction;
-(void)caretBackwardAction;
-(void)wordForwardAction;
-(void)wordBackwardAction;
-(void)fontFamilySelectorTapped;
-(void)toolbarDidBeginEditing:(id)arg1 ;
-(char)toolbarShouldBeginEditing:(id)arg1 ;
-(void)toolbarDidEndEditing:(id)arg1 ;
-(void)toolbarWillRejectItem:(id)arg1 ;
-(void)setButton:(id)arg1 selected:(char)arg2 ;
-(UIView *)replacementKeyboardOrNil;
-(void)setReadOnlyMode:(char)arg1 ;
-(id<RichMediaToolbarSessionManagerDelegate>)sessionManagerDelegate;
-(char)provideFullTextFormatting;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)setOrientation:(int)arg1 ;
@end

