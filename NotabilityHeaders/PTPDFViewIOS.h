/*
* This header is generated by classdump-dyld 1.0
* on Saturday, January 7, 2023 at 9:05:16 PM Indochina Time
* Operating System: Version 10.3.4 (Build 14G61)
* Image Source: /var/containers/Bundle/Application/1CFA07C5-D48B-45F0-A604-A4F98727D809/Notability.app/Notability
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notability/Notability-Structs.h>
#import <Notability/PTPDFView.h>

@protocol PTPDFViewCtrlInternalProtocol;
@class PTPDFViewIOSCpp, CADisplayLink, NSMutableArray, NSRecursiveLock, NSMutableDictionary;

@interface PTPDFViewIOS : PTPDFView {

	PTPDFViewIOSCpp* CppAccess;
	double m_screenScale;
	CADisplayLink* idleDisplayLink;
	CADisplayLink* scrollingDisplayLink;
	NSMutableArray* waitingTiles;
	NSMutableArray* collectedTiles;
	NSRecursiveLock* transferLock;
	char renderFinishedPending;
	double lastTime;
	NSMutableDictionary* annotAppearanceSequence;
	id<PTPDFViewCtrlInternalProtocol> delegate;
	int _pendingTiles;

}

@property (assign) int pendingTiles;              //@synthesize pendingTiles=_pendingTiles - In the implementation block
-(BOOL)retinaEnabled;
-(void)CancelRendering;
-(int)pendingTiles;
-(void)setPendingTiles:(int)arg1 ;
-(void)JavascriptCallback:(const char*)arg1 json:(const char*)arg2 ;
-(void)UpdateLayoutForDownloader;
-(void)downloadEventType:(int)arg1 pageNumber:(int)arg2 ;
-(void)GetThumbAsync:(int)arg1 ;
-(id)GetThumbInCache:(int)arg1 ;
-(void)FindTextCallback:(char)arg1 withSelection:(void*)arg2 ;
-(id)GetQuadsFromSelection:(id)arg1 ;
-(void)CheckTilesOnMainThread:(id)arg1 ;
-(void)CreateAndPassTile:(id)arg1 ;
-(void)sendATileNotScrollingWithWait:(char)arg1 ;
-(void)sendATileWhileScrolling;
-(void)sendATileNotScrolling;
-(char)SetZoomX:(int)arg1 Y:(int)arg2 Zoom:(double)arg3 ;
-(id)GetRectsOnCanvas:(id)arg1 ;
-(id)GetRects:(CGRect)arg1 ;
-(id)GetSelectedTextFromPage:(int)arg1 ToPage:(int)arg2 ;
-(id)GetQuadsFromPage:(int)arg1 ToPage:(int)arg2 ;
-(void)Update:(id)arg1 onPage:(int)arg2 ;
-(void)DoAction:(id)arg1 ;
-(char)ShowRect:(int)arg1 rect:(id)arg2 ;
-(double)GetZoom;
-(double)GetRefZoomForPage:(int)arg1 pageNum:(int)arg2 ;
-(char)SetZoom:(double)arg1 ;
-(char)SetZoomWithCoord:(int)arg1 y:(int)arg2 zoom:(double)arg3 ;
-(int)GetPageNumberFromScreenPt:(double)arg1 y:(double)arg2 ;
-(id)GetScreenRectForAnnot:(id)arg1 page_num:(int)arg2 ;
-(void)SetDevicePixelDensity:(double)arg1 scale_factor:(double)arg2 ;
-(id)ConvScreenPtToCanvasPt:(id)arg1 ;
-(id)ConvCanvasPtToScreenPt:(id)arg1 ;
-(id)ConvCanvasPtToPagePt:(id)arg1 page_num:(int)arg2 ;
-(id)ConvPagePtToCanvasPt:(id)arg1 page_num:(int)arg2 ;
-(id)ConvScreenPtToPagePt:(id)arg1 page_num:(int)arg2 ;
-(id)ConvPagePtToScreenPt:(id)arg1 page_num:(int)arg2 ;
-(double)GetCanvasWidth;
-(double)GetCanvasHeight;
-(double)GetHScrollPos;
-(double)GetVScrollPos;
-(void)OnScroll:(int)arg1 pix_dy:(int)arg2 ;
-(void)SetHScrollPos:(double)arg1 ;
-(void)SetVScrollPos:(double)arg1 ;
-(void)OnSize:(int)arg1 height:(int)arg2 ;
-(void)UpdateWithRect:(id)arg1 ;
-(int)GetBufferWidth;
-(int)GetBufferHeight;
-(int)GetBufferStride;
-(double)GetPageVGap;
-(double)GetPageHGap;
-(void)SetPageSpacing:(int)arg1 vert_col_space:(int)arg2 horiz_pad:(int)arg3 vert_pad:(int)arg4 ;
-(char)SelectWithTextSelect:(double)arg1 y1:(double)arg2 x2:(double)arg3 y2:(double)arg4 ;
-(char)SelectWithStructure:(double)arg1 y1:(double)arg2 page1:(int)arg3 x2:(double)arg4 y2:(double)arg5 page2:(int)arg6 ;
-(char)SelectWithHighlights:(id)arg1 ;
-(id)GetAnnotationAt:(int)arg1 y:(int)arg2 distanceThreshold:(double)arg3 minimumLineWeight:(double)arg4 ;
-(id)GetLinkAt:(int)arg1 y:(int)arg2 ;
-(void)printReportWithName:(char*)arg1 onLine:(int)arg2 ;
-(void)RemoveTile:(long long)arg1 OnCanvas:(int)arg2 ThumbnailId:(int)arg3 SequenceNumber:(int)arg4 ;
-(void)GotThumbAsync:(int)arg1 thumbBuf:(id)arg2 width:(int)arg3 height:(int)arg4 ;
-(void)deluxeCreateTile:(void*)arg1 buffer:(char*)arg2 size:(CGSize)arg3 stride:(unsigned)arg4 pageNumber:(unsigned)arg5 locationOfPage:(CGPoint)arg6 locationInPage:(CGPoint)arg7 zoomedPageSize:(CGSize)arg8 tileID:(unsigned)arg9 canvasID:(int)arg10 remainingTiles:(int)arg11 tileType:(int)arg12 sequenceNumber:(int)arg13 ;
-(void)CreateTile:(void*)arg1 Buffer:(char*)arg2 OriginX:(int)arg3 OrginY:(int)arg4 Width:(int)arg5 Height:(int)arg6 CanvasNumber:(int)arg7 CellNumber:(long long)arg8 FinalRender:(char)arg9 PredictedRender:(char)arg10 TilesRemaining:(int)arg11 ThumbnailId:(int)arg12 ;
-(void)invalidateCppAccess;
-(void)SetDocWithPath:(id)arg1 ;
-(void)SetOverprint:(BOOL)arg1 ;
-(void)SetThinLineAdjustment:(BOOL)arg1 StrokeAdjust:(BOOL)arg2 ;
-(char)SelectX1:(double)arg1 Y1:(double)arg2 X2:(double)arg3 Y2:(double)arg4 ;
-(char)SelectX1:(double)arg1 Y1:(double)arg2 PageNumber1:(int)arg3 X2:(double)arg4 Y2:(double)arg5 PageNumber2:(int)arg6 ;
-(void)Update;
-(id)init;
-(void)release;
-(void)invalidate;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
@end

